/*
 *                                   SOFTWARE USE PERMISSION
 *
 *  By downloading and accessing this software and associated documentation files ("Software") you are granted the
 *  unrestricted right to deal in the Software, including, without limitation the right to use, copy, modify, publish,
 *  sublicense and grant such rights to third parties, subject to the following conditions:
 *
 *  The following copyright notice and this permission notice shall be included in all copies, modifications or
 *  substantial portions of this Software: Copyright Â© 2016 GSM Association.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS," WITHOUT WARRANTY OF ANY KIND, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 *  ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. YOU
 *  AGREE TO INDEMNIFY AND HOLD HARMLESS THE AUTHORS AND COPYRIGHT HOLDERS FROM AND AGAINST ANY SUCH LIABILITY.
 */

package com.gsma.mobileconnect.oidc;

import com.gsma.mobileconnect.discovery.DiscoveryResponse;

import java.util.Calendar;

/**
 * A class that holds a valid response from {@link IOIDC#requestToken(DiscoveryResponse, String, String, TokenOptions, IRequestTokenCallback)}.
 */
public class RequestTokenResponseData
{
    private Calendar timeReceived;

    private String originalResponse;
    private String access_token;
    private String token_type;
    private String refresh_token;
    private Integer expires_in;
    private Calendar expires;
    private ParsedIdToken parsedIdToken;

    /**
     * Get the time the response was received.
     *
     * @return The time the response was received.
     */
    public Calendar getTimeReceived()
    {
        return timeReceived;
    }

    /**
     * Set the time the response was received.
     *
     * @param timeReceived The time the response was received.
     */
    public void setTimeReceived(Calendar timeReceived)
    {
        this.timeReceived = timeReceived;
        updateExpires();
    }

    /**
     * Get the original Json response from the authorization end point.
     *
     * @return The Json response.
     */
    public String getOriginalResponse()
    {
        return originalResponse;
    }

    /**
     * Set the original Json response from the authorization end point.
     *
     * @param originalResponse The Json response.
     */
    public void setOriginalResponse(String originalResponse)
    {
        this.originalResponse = originalResponse;
    }

    /**
     * Get the access token generated by the authentication/authorization server.
     *
     * @return The value of the access_token field.
     */
    public String get_access_token()
    {
        return access_token;
    }

    /**
     * Set the access token generated by the authentication/authorization server.
     *
     * @param access_token The value of the access_token field.
     */
    public void set_access_token(String access_token)
    {
        this.access_token = access_token;
    }

    /**
     * Get the type of the access token generated (should be "Bearer").
     *
     * @return The value of the token_type field.
     */
    public String get_token_type()
    {
        return token_type;
    }

    /**
     * Set the type of the access token generated (should be "Bearer").
     *
     * @param token_type The value of the token_type field.
     */
    public void set_token_type(String token_type)
    {
        this.token_type = token_type;
    }

    /**
     * Get the optional refresh token generated bt the authentication/authorization server.
     *
     * @return The value of the refresh_token field.
     */
    public String get_refresh_token()
    {
        return refresh_token;
    }

    /**
     * Set the optional refresh token generated bt the authentication/authorization server.
     *
     * @param refresh_token The value of the refresh_token field.
     */
    public void set_refresh_token(String refresh_token)
    {
        this.refresh_token = refresh_token;
    }

    /**
     * Get the duration (in seconds) that the access token is valid for.
     *
     * @return The value of the expires_in field.
     */
    public Integer get_expires_in()
    {
        return expires_in;
    }

    /**
     * Set the duration (in seconds) that the access token is valid for.
     *
     * @param expires_in The value of the expires_in field.
     */
    public void set_expires_in(Integer expires_in)
    {
        this.expires_in = expires_in;
        updateExpires();
    }

    /**
     * The time the response will expire.
     * <p>
     * This is calculated from the time received and expires_in value.
     *
     * @return The time the response expires.
     */
    public Calendar getExpires()
    {
        return expires;
    }

    /**
     * Calculate the expires value.
     */
    private void updateExpires()
    {
        if(null == expires_in || null == timeReceived)
        {
            expires = null;
        }
        else
        {
            expires = (Calendar) timeReceived.clone();
            expires.add(Calendar.SECOND, expires_in);
        }
    }

    /**
     * Get the parsed id_token from the Json response.
     *
     * @return The parsed id_token.
     */
    public ParsedIdToken getParsedIdToken()
    {
        return parsedIdToken;
    }

    /**
     * Set the parsed id_token from the Json response.
     *
     * @param parsedIdToken The parsed id_token.
     */
    public void setParsedIdToken(ParsedIdToken parsedIdToken)
    {
        this.parsedIdToken = parsedIdToken;
    }
}